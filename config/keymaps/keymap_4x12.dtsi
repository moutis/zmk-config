/*
    Assemble the keymap from the abstracted alpha layer and other layers
    
    This is for a 12x4 (48 key) ortholinear board
    
    Works with Planck, Naked48, etc.
        
    Uses the core 3x5+2 alpha row defs and adds extra keys to fill out the keymap.
    The key (rows) values are defined in the corresponding HD-##.h file
    that should be included in the .keymap file before this.

    Layers are defined in moutis_config.dtsi so they can be
    referenced anywhere (keymap, behaviors, combos, adaptives)

*/

#include "layers_def.h" // layer def common core (3x5+2)

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            // ----------------------------------------------------------------------------------------------------------------------
            // |  TAB  |   X   |   W   |   M   |   G   |   J   | ------- | ------- |   #   |   .    |   /   |   "   |   '   |   \   |
            // | SHIFT |   S   |   C   |   N   |   T   |   K   | ------- | ------- |   ,   |   A    |   E   |   I   |   H   |   '   |
            // | CTRL  |   F   |   P   |   L   |   D   |   V   | ------- | ------- |   -   |   U    |   O   |   Y   |   B   | ENTER |
            // |-------|ADJUST | LCTL  | LALT  | LGUI  | LOWR  | bootloader | SPACE| RAIS  |  LARW  |  DARW |  UARW | RARW  |-------|
            // ----------------------------------------------------------------------------------------------------------------------


            bindings = <
                &kp TAB    &kp X  &kp W     &kp M    &kp G    &kp J                     &kp HASH   &kp DOT  &kp FSLH  &kp DQT &kp SQT   &kp BSLH
                &kp LSHFT  &kp S  &kp C     &kp N    &kp T    &kp K                     &kp COMMA  &kp A    &kp E     &kp I   &kp H     &kp SQT
                &kp LCTRL  &kp F  &kp P     &kp L    &kp D    &kp V                     &kp MINUS  &kp U    &kp O     &kp Y   &kp B     &kp RET
                           &mo 3  &kp LCTRL &kp LALT &kp LGUI &mo 1 &bootloader &kp SPACE &mo 2  &kp LEFT &kp DOWN  &kp UP  &kp RIGHT
            >;
        };
    };
